{
    "project": {
        "name": "Hilo",
        "description": "An ultra-fast JavaScript Framework",
        "version": "0.1.0-pre-dev-beta",
        "url": ""
    },
    "files": {
        "src\\ajax\\main.js": {
            "name": "src\\ajax\\main.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\dom\\class-id.js": {
            "name": "src\\dom\\class-id.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\dom\\css.js": {
            "name": "src\\dom\\css.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\dom\\main.js": {
            "name": "src\\dom\\main.js",
            "modules": {},
            "classes": {
                "Dom": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\dom\\manp.js": {
            "name": "src\\dom\\manp.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\dom\\misc.js": {
            "name": "src\\dom\\misc.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\test\\comp.js": {
            "name": "src\\test\\comp.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\test\\main.js": {
            "name": "src\\test\\main.js",
            "modules": {},
            "classes": {
                "Test": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\core.js": {
            "name": "src\\core.js",
            "modules": {},
            "classes": {
                "hilo": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\start.js": {
            "name": "src\\start.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Dom": {
            "name": "Dom",
            "shortname": "Dom",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\dom\\main.js",
            "line": 1,
            "description": "Main DOM class",
            "access": "private",
            "tagname": "",
            "is_constructor": 1,
            "params": [
                {
                    "name": "Array",
                    "description": "els A DOMNodeList"
                }
            ],
            "return": {
                "description": "void"
            }
        },
        "Test": {
            "name": "Test",
            "shortname": "Test",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\test\\main.js",
            "line": 14,
            "description": "Main Test Class",
            "access": "private",
            "tagname": "",
            "is_constructor": 1,
            "params": [
                {
                    "name": "any",
                    "description": "con The whatever to be tested"
                },
                {
                    "name": "boolean",
                    "description": "neg To negate"
                }
            ],
            "return": {
                "description": "void"
            }
        },
        "hilo": {
            "name": "hilo",
            "shortname": "hilo",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\core.js",
            "line": 48,
            "description": "The Main Class",
            "is_constructor": 1,
            "params": [
                {
                    "name": "input",
                    "description": "MAGICal input",
                    "type": "String|Function|Object|Array|HTMLElement"
                }
            ],
            "root": "HTMLElement Where to start searching from"
        }
    },
    "classitems": [
        {
            "file": "src\\ajax\\main.js",
            "line": 1,
            "description": "config:\n    - method: HTTP Method \"GET\" or \"POST\" (default: \"POST\")\n    - url: The file to send request\n    - async: Whether to perform an asynchronous request (default: true)\n    - response: Response type \"text\" or \"XML\"\n    - Event functions\n      - callback: The function to be executed each time onreadystatechange event is triggered\n      - completed\n      - error\n      - abort\n      - success\n      - progress\n      - load\n      - loadStart\n      - loadEnd\n    - username\n    - password\n    - contentType",
            "class": "Dom"
        },
        {
            "file": "src\\dom\\class-id.js",
            "line": 1,
            "description": "Changes id of selected els",
            "itemtype": "method",
            "name": "id",
            "params": [
                {
                    "name": "string",
                    "description": "id The id to be set"
                }
            ],
            "return": {
                "description": "object"
            },
            "class": "Dom"
        },
        {
            "file": "src\\dom\\class-id.js",
            "line": 23,
            "description": "Adds a class of selected els",
            "itemtype": "method",
            "name": "addClass",
            "params": [
                {
                    "name": "className",
                    "description": "The class name of list of class names",
                    "type": "String|Array"
                }
            ],
            "return": {
                "description": "object"
            },
            "class": "Dom"
        },
        {
            "file": "src\\dom\\css.js",
            "line": 1,
            "description": "Set or return CSS Property of selected el(s)",
            "itemtype": "method",
            "name": "css",
            "params": [
                {
                    "name": "string",
                    "description": "prop property to be set or returned"
                },
                {
                    "name": "string",
                    "description": "value value to be set"
                }
            ],
            "return": {
                "description": "object"
            },
            "class": "Dom"
        },
        {
            "file": "src\\dom\\css.js",
            "line": 24,
            "description": "Set or return width of selected el(s)",
            "itemtype": "method",
            "name": "width",
            "params": [
                {
                    "name": "prop",
                    "description": "width",
                    "type": "String|Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Object|String"
            },
            "class": "Dom"
        },
        {
            "file": "src\\dom\\css.js",
            "line": 46,
            "description": "Set or return height of selected el(s)",
            "itemtype": "method",
            "name": "height",
            "params": [
                {
                    "name": "height",
                    "description": "height",
                    "type": "String|Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Object|String"
            },
            "class": "Dom"
        },
        {
            "file": "src\\dom\\css.js",
            "line": 68,
            "description": "Set or return color of selected el(s)",
            "itemtype": "method",
            "name": "color",
            "params": [
                {
                    "name": "String",
                    "description": "color color"
                }
            ],
            "return": {
                "description": "",
                "type": "Object|String"
            },
            "class": "Dom"
        },
        {
            "file": "src\\dom\\css.js",
            "line": 88,
            "description": "Set or return background color of selected el(s)",
            "itemtype": "method",
            "name": "backgroundColor",
            "params": [
                {
                    "name": "String",
                    "description": "backgroundColor background color"
                }
            ],
            "return": {
                "description": "",
                "type": "Object|String"
            },
            "class": "Dom"
        },
        {
            "file": "src\\dom\\css.js",
            "line": 108,
            "description": "Set or return background prop of selected el(s)",
            "itemtype": "method",
            "name": "background",
            "params": [
                {
                    "name": "String",
                    "description": "background background"
                }
            ],
            "return": {
                "description": "",
                "type": "Object|String"
            },
            "class": "Dom"
        },
        {
            "file": "src\\dom\\css.js",
            "line": 128,
            "description": "Set or return margin of selected el(s)",
            "itemtype": "method",
            "name": "margin",
            "params": [
                {
                    "name": "margin",
                    "description": "margin",
                    "type": "String|Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Object|String"
            },
            "class": "Dom"
        },
        {
            "file": "src\\dom\\css.js",
            "line": 148,
            "description": "Set or return padding of selected el(s)",
            "itemtype": "method",
            "name": "padding",
            "params": [
                {
                    "name": "padding",
                    "description": "padding",
                    "type": "String|Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Object|String"
            },
            "class": "Dom"
        },
        {
            "file": "src\\dom\\css.js",
            "line": 168,
            "description": "Set or return font size of selected el(s)",
            "itemtype": "method",
            "name": "fontSize",
            "params": [
                {
                    "name": "fontSize",
                    "description": "font size",
                    "type": "String|Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Object|String"
            },
            "class": "Dom"
        },
        {
            "file": "src\\dom\\manp.js",
            "line": 2,
            "description": "Changes innerHTML of selected els",
            "itemtype": "method",
            "name": "html",
            "params": [
                {
                    "name": "String",
                    "description": "htmlCode The HTML Code to be set"
                }
            ],
            "return": {
                "description": "object"
            },
            "class": "Test"
        },
        {
            "file": "src\\dom\\manp.js",
            "line": 25,
            "description": "Changes innerText of selected els",
            "itemtype": "method",
            "name": "text",
            "params": [
                {
                    "name": "string",
                    "description": "texy The text Code to be set"
                }
            ],
            "return": {
                "description": "object"
            },
            "class": "Test"
        },
        {
            "file": "src\\dom\\manp.js",
            "line": 46,
            "description": "Appends to innerHTML of selected els",
            "itemtype": "method",
            "name": "append",
            "params": [
                {
                    "name": "string",
                    "description": "html The HTML Code to be appended"
                }
            ],
            "return": {
                "description": "object"
            },
            "class": "Test"
        },
        {
            "file": "src\\dom\\manp.js",
            "line": 60,
            "description": "Appends to innerText if selected els",
            "itemtype": "method",
            "name": "appendText",
            "params": [
                {
                    "name": "string",
                    "description": "text The test to be appended"
                }
            ],
            "return": {
                "description": "object"
            },
            "class": "Test"
        },
        {
            "file": "src\\dom\\misc.js",
            "line": 2,
            "description": "Returns a DOM NodeList of selected elements",
            "itemtype": "method",
            "name": "get",
            "return": {
                "description": "Array the DOM NodeList"
            },
            "class": "Test"
        },
        {
            "file": "src\\test\\comp.js",
            "line": 1,
            "description": "Tests if Equal to",
            "itemtype": "method",
            "name": "ifEquals",
            "params": [
                {
                    "name": "any",
                    "description": "tw Comparative"
                }
            ],
            "return": {
                "description": "boolean If Equal"
            },
            "class": "Test"
        },
        {
            "file": "src\\test\\comp.js",
            "line": 14,
            "description": "Tests if contains",
            "itemtype": "method",
            "name": "ifContains",
            "params": [
                {
                    "name": "any",
                    "description": "tw Comparative"
                }
            ],
            "return": {
                "description": "boolean if contains"
            },
            "class": "Test"
        },
        {
            "file": "src\\test\\comp.js",
            "line": 31,
            "description": "Tests if it is the same object",
            "itemtype": "method",
            "name": "ifIs",
            "params": [
                {
                    "name": "any",
                    "description": "tw Comparative"
                }
            ],
            "return": {
                "description": "boolean If it is"
            },
            "class": "Test"
        },
        {
            "file": "src\\test\\main.js",
            "line": 2,
            "description": "Test API",
            "itemtype": "method",
            "name": "test",
            "params": [
                {
                    "name": "any",
                    "description": "con The whatever to be testes"
                }
            ],
            "return": {
                "description": "object"
            },
            "class": "Test"
        },
        {
            "file": "src\\core.js",
            "line": 9,
            "description": "Selects and returns elements based on selector given",
            "itemtype": "method",
            "name": "select",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "String",
                    "description": "sel selector"
                },
                {
                    "name": "HTMLElement",
                    "description": "root root element"
                }
            ],
            "return": {
                "description": "NodeList Array of HTMLElements"
            },
            "class": "hilo"
        },
        {
            "file": "src\\start.js",
            "line": 1,
            "package": "Hilo",
            "version": "0.1.0",
            "author": "Erik Royall <erikroyall@hotmail.com>",
            "class": ""
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: root",
            "line": " src\\core.js:48"
        },
        {
            "message": "unknown tag: package",
            "line": " src\\start.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " src\\start.js:1"
        },
        {
            "message": "Missing item type\nconfig:\n    - method: HTTP Method \"GET\" or \"POST\" (default: \"POST\")\n    - url: The file to send request\n    - async: Whether to perform an asynchronous request (default: true)\n    - response: Response type \"text\" or \"XML\"\n    - Event functions\n      - callback: The function to be executed each time onreadystatechange event is triggered\n      - completed\n      - error\n      - abort\n      - success\n      - progress\n      - load\n      - loadStart\n      - loadEnd\n    - username\n    - password\n    - contentType",
            "line": " src\\ajax\\main.js:1"
        },
        {
            "message": "Missing item type",
            "line": " src\\start.js:1"
        }
    ]
}