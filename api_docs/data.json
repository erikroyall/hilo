{
    "project": {
        "name": "hilo",
        "description": "A lightning fast client-side JavaScript Framework and library that makes developing awesome websites easy",
        "version": "0.1.0-pre-dev-beta-9",
        "url": ""
    },
    "files": {
        "src\\ajax\\main.js": {
            "name": "src\\ajax\\main.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\dom\\class-id.js": {
            "name": "src\\dom\\class-id.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Dom": 1
            },
            "namespaces": {}
        },
        "src\\dom\\main.js": {
            "name": "src\\dom\\main.js",
            "modules": {},
            "classes": {
                "Dom": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\dom\\sizzle.js": {
            "name": "src\\dom\\sizzle.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\core.js": {
            "name": "src\\core.js",
            "modules": {
                "Hilo": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "Hilo": {
            "name": "Hilo",
            "submodules": {},
            "classes": {
                "Dom": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\dom\\main.js",
            "line": 6
        }
    },
    "classes": {
        "Dom": {
            "name": "Dom",
            "shortname": "Dom",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Hilo",
            "file": "src\\dom\\main.js",
            "line": 6,
            "description": "Main DOM Class",
            "is_constructor": 1,
            "params": [
                {
                    "name": "els",
                    "description": "The elements to manipulate",
                    "type": "Array"
                },
                {
                    "name": "sel",
                    "description": "The selector used",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "example": [
                "\n new Dom (document.querySelectorAll(p:first-child); <br />\n new Dom ([document.createElement(\"div\")]);<br />\n new Dom ([document.getElementByid(\"box\")]);<br />\n new Dom (document.getElementsByClassName(\"hidden\"));<br />\n new Dom (document.getElementsByTagName(\"mark\"));<br />"
            ],
            "since": "0.1.0"
        }
    },
    "classitems": [
        {
            "file": "src\\ajax\\main.js",
            "line": 5,
            "description": "Makes an AJAX request",
            "params": [
                {
                    "name": "config",
                    "description": "AJAX configuration options",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Hilo"
            },
            "class": "Dom"
        },
        {
            "file": "src\\dom\\class-id.js",
            "line": 8,
            "description": "Set or return ID of first element",
            "itemtype": "method",
            "name": "id",
            "params": [
                {
                    "name": "id",
                    "description": "The id to set",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String|void"
            },
            "example": [
                "\n $(\"p.rect\").first().id(\"square\")"
            ],
            "since": "0.1.0",
            "class": "Dom"
        },
        {
            "file": "src\\dom\\class-id.js",
            "line": 35,
            "description": "Add, remove or check class(es)",
            "itemtype": "method",
            "name": "class",
            "params": [
                {
                    "name": "action",
                    "description": "Specifies the action to take",
                    "type": "String"
                },
                {
                    "name": "className",
                    "description": "Class(es) to be checked or manipulated",
                    "type": "String|array"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean|void"
            },
            "example": [
                "\n $(\"div#editor\").class(\"add\", \"no-js\")"
            ],
            "since": "0.1.0",
            "class": "Dom"
        },
        {
            "file": "src\\dom\\class-id.js",
            "line": 300,
            "description": "Adds class(es) to selected elements",
            "itemtype": "method",
            "name": "addClass",
            "params": [
                {
                    "name": "className",
                    "description": "The class(es) to add",
                    "type": "String|array"
                }
            ],
            "return": {
                "description": "",
                "type": "Dom"
            },
            "example": [
                "\n $(\"p\").addClass(\"paragraph\")"
            ],
            "since": "0.1.0",
            "class": "Dom"
        },
        {
            "file": "src\\dom\\class-id.js",
            "line": 315,
            "description": "Remove class(es) from selected elements",
            "itemtype": "method",
            "name": "removeClass",
            "params": [
                {
                    "name": "classes",
                    "description": "The class(es) to be removed",
                    "type": "String|array"
                }
            ],
            "return": {
                "description": "",
                "type": "Dom"
            },
            "example": [
                "\n $(\"p.hidden\").removeClass(\"hidden\")"
            ],
            "since": "0.1.0",
            "class": "Dom"
        },
        {
            "file": "src\\dom\\class-id.js",
            "line": 330,
            "description": "Check for class(es) in selected elements",
            "itemtype": "method",
            "name": "hasClass",
            "params": [
                {
                    "name": "className",
                    "description": "The class(es) to be checked for existence",
                    "type": "String|array"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "example": [
                "\n if(!$(\"audio:not([controls])\").hasClass(\"hidden\")) {\n   $(\"audio:not([controls])\").addClass(\"hidden\");\n }"
            ],
            "since": "0.1.0",
            "class": "Dom"
        },
        {
            "file": "src\\dom\\class-id.js",
            "line": 347,
            "description": "Add class(es) if not already, remove if added",
            "itemtype": "method",
            "name": "toggleClass",
            "params": [
                {
                    "name": "className",
                    "description": "The classes to be toggled",
                    "type": "String|array"
                }
            ],
            "return": {
                "description": "",
                "type": "Dom"
            },
            "example": [
                "\n $(\".someClass\").on(\"click\", function () {\n   $(this).toggleClass(\"opaque\");\n });"
            ],
            "since": "0.1.0",
            "class": "Dom"
        },
        {
            "file": "src\\dom\\class-id.js",
            "line": 364,
            "description": "Set or return attributes",
            "itemtype": "method",
            "name": "attr",
            "params": [
                {
                    "name": "name",
                    "description": "Name of attribute",
                    "type": "String"
                },
                {
                    "name": "val",
                    "description": "Value of the attribute",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String|void"
            },
            "example": [
                "\n $(\"p.hidden\").attr(\"hidden\")\n $(\"div.edit\").attr(\"contentEditable\", \"true\")\n $(\"body\").attr(\"hilo\", \"0.1.0\")"
            ],
            "since": "0.1.0",
            "class": "Dom"
        },
        {
            "file": "src\\dom\\sizzle.js",
            "line": 214,
            "description": "Create key-value caches of limited size",
            "return": {
                "description": "Returns the Object data after storing it on itself with\n property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n deleting the oldest entry",
                "type": "Function(string, Object)"
            },
            "class": ""
        },
        {
            "file": "src\\dom\\sizzle.js",
            "line": 414,
            "description": "Mark a function for special use by Sizzle",
            "params": [
                {
                    "name": "fn",
                    "description": "The function to mark",
                    "type": "Function"
                }
            ],
            "class": ""
        },
        {
            "file": "src\\dom\\sizzle.js",
            "line": 423,
            "description": "Support testing using an element",
            "params": [
                {
                    "name": "fn",
                    "description": "Passed the created div and expects a boolean result",
                    "type": "Function"
                }
            ],
            "class": ""
        },
        {
            "file": "src\\dom\\sizzle.js",
            "line": 444,
            "description": "Adds the same handler for all of the specified attrs",
            "params": [
                {
                    "name": "attrs",
                    "description": "Pipe-separated list of attributes",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "The method that will be applied",
                    "type": "Function"
                }
            ],
            "class": ""
        },
        {
            "file": "src\\dom\\sizzle.js",
            "line": 458,
            "description": "Checks document order of two siblings",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "Returns less than 0 if a precedes b, greater than 0 if a follows b",
                "type": "Number"
            },
            "class": ""
        },
        {
            "file": "src\\dom\\sizzle.js",
            "line": 487,
            "description": "Returns a function to use in pseudos for input types",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": ""
        },
        {
            "file": "src\\dom\\sizzle.js",
            "line": 498,
            "description": "Returns a function to use in pseudos for buttons",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": ""
        },
        {
            "file": "src\\dom\\sizzle.js",
            "line": 509,
            "description": "Returns a function to use in pseudos for positionals",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": ""
        },
        {
            "file": "src\\dom\\sizzle.js",
            "line": 531,
            "description": "Detect xml",
            "params": [
                {
                    "name": "elem",
                    "description": "An element or a document",
                    "type": "Element|Object"
                }
            ],
            "class": ""
        },
        {
            "file": "src\\dom\\sizzle.js",
            "line": 545,
            "description": "Sets document-related variables once based on the current document",
            "params": [
                {
                    "name": "doc",
                    "description": "An element or document object to use to set the document",
                    "type": "Element|Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the current document",
                "type": "Object"
            },
            "class": ""
        },
        {
            "file": "src\\dom\\sizzle.js",
            "line": 955,
            "description": "Document sorting and removing duplicates",
            "params": [
                {
                    "name": "results",
                    "description": "",
                    "type": "ArrayLike"
                }
            ],
            "class": ""
        },
        {
            "file": "src\\dom\\sizzle.js",
            "line": 984,
            "description": "Utility function for retrieving the text value of an array of DOM nodes",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "Array|Element"
                }
            ],
            "class": ""
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\dom\\sizzle.js:214"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\dom\\sizzle.js:458"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\dom\\sizzle.js:545"
        },
        {
            "message": "Missing item type\nMakes an AJAX request",
            "line": " src\\ajax\\main.js:5"
        },
        {
            "message": "Missing item type\nCreate key-value caches of limited size",
            "line": " src\\dom\\sizzle.js:214"
        },
        {
            "message": "Missing item type\nMark a function for special use by Sizzle",
            "line": " src\\dom\\sizzle.js:414"
        },
        {
            "message": "Missing item type\nSupport testing using an element",
            "line": " src\\dom\\sizzle.js:423"
        },
        {
            "message": "Missing item type\nAdds the same handler for all of the specified attrs",
            "line": " src\\dom\\sizzle.js:444"
        },
        {
            "message": "Missing item type\nChecks document order of two siblings",
            "line": " src\\dom\\sizzle.js:458"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for input types",
            "line": " src\\dom\\sizzle.js:487"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for buttons",
            "line": " src\\dom\\sizzle.js:498"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for positionals",
            "line": " src\\dom\\sizzle.js:509"
        },
        {
            "message": "Missing item type\nDetect xml",
            "line": " src\\dom\\sizzle.js:531"
        },
        {
            "message": "Missing item type\nSets document-related variables once based on the current document",
            "line": " src\\dom\\sizzle.js:545"
        },
        {
            "message": "Missing item type\nDocument sorting and removing duplicates",
            "line": " src\\dom\\sizzle.js:955"
        },
        {
            "message": "Missing item type\nUtility function for retrieving the text value of an array of DOM nodes",
            "line": " src\\dom\\sizzle.js:984"
        }
    ]
}